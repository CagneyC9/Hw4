{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagne\\\\Documents\\\\AUF23\\\\CSC 3700\\\\Week13\\\\final-hw\\\\src\\\\Components\\\\DeleteCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateCustomer() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [ids, setIds] = useState(''); // Corrected name to match the state variable\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Assuming you get the ID from the URL parameters\n\n  useEffect(() => {\n    // Fetch existing customer details when the component mounts\n    fetch(`http://localhost:8000/customer/${id}`).then(response => response.json()).then(customer => {\n      setName(customer.CustomerName);\n      setEmail(customer.CustomerEmail);\n    }).catch(error => {\n      console.error('Error fetching customer details:', error);\n      setError('Failed to fetch customer details. Please try again.');\n    });\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedCustomer = {\n      CustomerID: id,\n      CustomerName: name,\n      CustomerEmail: email\n    };\n\n    // Send a PUT or PATCH request to update the existing customer\n    JSON.stringify(updatedCustomer);\n    fetch(`http://localhost:8000/customer/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedCustomer)\n    }).then(() => {\n      console.log('Customer updated successfully');\n      navigate('/customers');\n    }).catch(error => {\n      console.error('Error updating customer:', error);\n      setError('Failed to update customer. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Update Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Customer name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Customer Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Update Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateCustomer, \"Ob6jPrj0b6CJLwh8vCJAVK07VA0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateCustomer;\nexport default UpdateCustomer;\nvar _c;\n$RefreshReg$(_c, \"UpdateCustomer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateCustomer","_s","name","setName","email","setEmail","ids","setIds","error","setError","navigate","id","fetch","then","response","json","customer","CustomerName","CustomerEmail","catch","console","handleSubmit","e","preventDefault","updatedCustomer","CustomerID","JSON","stringify","method","headers","body","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/cagne/Documents/AUF23/CSC 3700/Week13/final-hw/src/Components/DeleteCustomer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nfunction UpdateCustomer() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [ids, setIds] = useState(''); // Corrected name to match the state variable\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); // Assuming you get the ID from the URL parameters\r\n\r\n    useEffect(() => {\r\n        // Fetch existing customer details when the component mounts\r\n        fetch(`http://localhost:8000/customer/${id}`)\r\n            .then((response) => response.json())\r\n            .then((customer) => {\r\n                setName(customer.CustomerName);\r\n                setEmail(customer.CustomerEmail);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching customer details:', error);\r\n                setError('Failed to fetch customer details. Please try again.');\r\n            });\r\n    }, [id]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const updatedCustomer = { CustomerID: id, CustomerName: name, CustomerEmail: email };\r\n\r\n        // Send a PUT or PATCH request to update the existing customer\r\n        JSON.stringify(updatedCustomer)\r\n        fetch(`http://localhost:8000/customer/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(updatedCustomer),\r\n        })\r\n            .then(() => {\r\n                console.log('Customer updated successfully');\r\n                navigate('/customers');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error updating customer:', error);\r\n                setError('Failed to update customer. Please try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"update\">\r\n            <h2> Update Customer</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Customer name: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <div>\r\n                    <label>Customer Email: </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        required\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button> Update Customer</button>\r\n                </div>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateCustomer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
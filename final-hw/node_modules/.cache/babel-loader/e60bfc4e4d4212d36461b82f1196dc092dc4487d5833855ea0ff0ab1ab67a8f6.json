{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagne\\\\Documents\\\\AUF23\\\\CSC 3700\\\\Week13\\\\final-hw\\\\src\\\\Components\\\\DeleteCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeleteCustomer() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Assuming you get the ID from the URL parameters\n\n  useEffect(() => {\n    // Check if id is defined before making the fetch request\n    if (id) {\n      // Fetch existing customer details when the component mounts\n      fetch(`http://localhost:8000/customer/${id}`).then(response => response.json()).then(customer => {\n        setName(customer.CustomerName);\n        setEmail(customer.CustomerEmail);\n      }).catch(error => {\n        console.error('Error fetching customer details:', error);\n        setError('Failed to fetch customer details. Please try again.');\n      });\n    }\n  }, [id]);\n  const handleDelete = e => {\n    e.preventDefault();\n\n    // Send a DELETE request to remove the customer\n    fetch(`http://localhost:8000/customer/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        CustomerID: id\n      }) // Pass only the id as an object\n    }).then(() => {\n      console.log('Customer deleted successfully');\n      // navigate('/customers');\n    }).catch(error => {\n      console.error('Error deleting customer:', error);\n      setError('Failed to delete customer. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"delete\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleDelete,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(DeleteCustomer, \"SAZiqaDbzT2znyi2utnMFdUBoxA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = DeleteCustomer;\nexport default DeleteCustomer;\nvar _c;\n$RefreshReg$(_c, \"DeleteCustomer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","DeleteCustomer","_s","name","setName","email","setEmail","error","setError","navigate","id","fetch","then","response","json","customer","CustomerName","CustomerEmail","catch","console","handleDelete","e","preventDefault","method","headers","body","JSON","stringify","CustomerID","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/cagne/Documents/AUF23/CSC 3700/Week13/final-hw/src/Components/DeleteCustomer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nfunction DeleteCustomer() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); // Assuming you get the ID from the URL parameters\r\n\r\n    useEffect(() => {\r\n        // Check if id is defined before making the fetch request\r\n        if (id) {\r\n            // Fetch existing customer details when the component mounts\r\n            fetch(`http://localhost:8000/customer/${id}`)\r\n                .then((response) => response.json())\r\n                .then((customer) => {\r\n                    setName(customer.CustomerName);\r\n                    setEmail(customer.CustomerEmail);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error fetching customer details:', error);\r\n                    setError('Failed to fetch customer details. Please try again.');\r\n                });\r\n        }\r\n    }, [id]);\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Send a DELETE request to remove the customer\r\n        fetch(`http://localhost:8000/customer/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ CustomerID: id }), // Pass only the id as an object\r\n        })\r\n            .then(() => {\r\n                console.log('Customer deleted successfully');\r\n                // navigate('/customers');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting customer:', error);\r\n                setError('Failed to delete customer. Please try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"delete\">\r\n            <h2>Delete Customer</h2>\r\n            <form onSubmit={handleDelete}>\r\n                <button>Delete Customer</button>\r\n            </form>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteCustomer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
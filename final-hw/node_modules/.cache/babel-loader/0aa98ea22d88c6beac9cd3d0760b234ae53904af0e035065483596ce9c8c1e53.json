{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagne\\\\Documents\\\\AUF23\\\\CSC 3700\\\\Week13\\\\final-hw\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport BookList from \"./BookList\";\nimport React from \"react\";\nimport ProductList from \"./ProductList\";\nimport Products from './products';\nimport Customer from \"./customers\";\nimport Sales from \"./sales\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const urls = ['url1', 'url2', 'url3'];\n  const {\n    data,\n    error,\n    isPending\n  } = useFetch(urls);\n\n  // Rest of your component logic using the fetched data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(MyComponent, \"B+N4B7SOqe6r525QsGYLxwJpCGc=\", false, function () {\n  return [useFetch];\n});\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["useNavigate","useFetch","Button","Col","Row","BookList","React","ProductList","Products","Customer","Sales","jsxDEV","_jsxDEV","MyComponent","_s","urls","data","error","isPending","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cagne/Documents/AUF23/CSC 3700/Week13/final-hw/src/Components/Home.js"],"sourcesContent":["import {useNavigate} from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport BookList from \"./BookList\";\r\nimport React from \"react\";\r\nimport ProductList from \"./ProductList\";\r\nimport Products from './products'\r\nimport Customer from \"./customers\";\r\nimport Sales from \"./sales\"\r\n\r\n\r\nfunction MyComponent() {\r\n    const urls = ['url1', 'url2', 'url3'];\r\n    const { data, error, isPending } = useFetch(urls);\r\n\r\n    // Rest of your component logic using the fetched data\r\n\r\n    return (\r\n        <div>\r\n            {/* Render based on the fetched data */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":";;AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAO,iBAAiB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;EACrC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGjB,QAAQ,CAACc,IAAI,CAAC;;EAEjD;;EAEA,oBACIH,OAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd;AAACR,EAAA,CAXQD,WAAW;EAAA,QAEmBZ,QAAQ;AAAA;AAAAsB,EAAA,GAFtCV,WAAW;AAapB,eAAeA,WAAW;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
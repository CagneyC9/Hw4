{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagne\\\\Documents\\\\AUF23\\\\CSC 3700\\\\Week13\\\\final-hw\\\\src\\\\Components\\\\DeleteCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeleteCustomer() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [ids, setIds] = useState(''); // Corrected name to match the state variable\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Assuming you get the ID from the URL parameters\n\n  useEffect(() => {\n    // Fetch existing customer details when the component mounts\n    fetch(`http://localhost:8000/customer/${id}`).then(response => response.json()).catch(error => {\n      console.error('Error fetching customer details:', error);\n      setError('Failed to fetch customer details. Please try again.');\n    });\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const deletedCustomer = {\n      CustomerID: id\n    };\n\n    // Send a PUT or PATCH request to update the existing customer\n    console.log(`http://localhost:8000/customer/${id}`);\n    fetch(`http://localhost:8000/customer/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(deletedCustomer)\n    }).then(() => {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Delete Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(DeleteCustomer, \"Ob6jPrj0b6CJLwh8vCJAVK07VA0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = DeleteCustomer;\nexport default DeleteCustomer;\nvar _c;\n$RefreshReg$(_c, \"DeleteCustomer\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","DeleteCustomer","_s","name","setName","email","setEmail","ids","setIds","error","setError","navigate","id","fetch","then","response","json","catch","console","handleSubmit","e","preventDefault","deletedCustomer","CustomerID","log","method","headers","body","JSON","stringify","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cagne/Documents/AUF23/CSC 3700/Week13/final-hw/src/Components/DeleteCustomer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nfunction DeleteCustomer() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [ids, setIds] = useState(''); // Corrected name to match the state variable\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); // Assuming you get the ID from the URL parameters\r\n\r\n    useEffect(() => {\r\n        // Fetch existing customer details when the component mounts\r\n        fetch(`http://localhost:8000/customer/${id}`)\r\n            .then((response) => response.json())\r\n            .catch((error) => {\r\n                console.error('Error fetching customer details:', error);\r\n                setError('Failed to fetch customer details. Please try again.');\r\n            });\r\n    }, [id]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const deletedCustomer = { CustomerID: id };\r\n\r\n        // Send a PUT or PATCH request to update the existing customer\r\n        console.log(`http://localhost:8000/customer/${id}`)\r\n        fetch(`http://localhost:8000/customer/${id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(deletedCustomer),\r\n        })\r\n            .then(() => {\r\n            })\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <button> Delete Customer</button>\r\n        </form>\r\n            );\r\n\r\n}\r\n            export default DeleteCustomer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5BF,SAAS,CAAC,MAAM;IACZ;IACAiB,KAAK,CAAE,kCAAiCD,EAAG,EAAC,CAAC,CACxCE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCC,KAAK,CAAER,KAAK,IAAK;MACdS,OAAO,CAACT,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDC,QAAQ,CAAC,qDAAqD,CAAC;IACnE,CAAC,CAAC;EACV,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC;EAER,MAAMO,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,eAAe,GAAG;MAAEC,UAAU,EAAEX;IAAG,CAAC;;IAE1C;IACAM,OAAO,CAACM,GAAG,CAAE,kCAAiCZ,EAAG,EAAC,CAAC;IACnDC,KAAK,CAAE,kCAAiCD,EAAG,EAAC,EAAE;MAC1Ca,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,eAAe;IACxC,CAAC,CAAC,CACGR,IAAI,CAAC,MAAM,CACZ,CAAC,CAAC;EACV,CAAC;EAED,oBACId,OAAA;IAAM8B,QAAQ,EAAEX,YAAa;IAAAY,QAAA,eACzB/B,OAAA;MAAA+B,QAAA,EAAQ;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAGf;AAACjC,EAAA,CAvCQD,cAAc;EAAA,QAKFJ,WAAW,EACbC,SAAS;AAAA;AAAAsC,EAAA,GANnBnC,cAAc;AAwCX,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
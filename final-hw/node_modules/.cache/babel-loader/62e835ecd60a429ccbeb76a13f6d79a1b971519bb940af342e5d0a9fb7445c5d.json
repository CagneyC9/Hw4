{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagne\\\\Documents\\\\AUF23\\\\CSC 3700\\\\Week13\\\\final-hw\\\\src\\\\Components\\\\UpdateCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateCustomer = ({\n  customerId,\n  onUpdate\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  // Fetch existing customer data based on customerId when the component mounts\n  useEffect(() => {\n    const fetchCustomerData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/customer/${customerId}`);\n        const customerData = await response.json();\n\n        // Populate the fields with existing data\n        setName(customerData.CustomerName);\n        setEmail(customerData.CustomerEmail);\n      } catch (error) {\n        console.error('Error fetching customer data:', error);\n      }\n    };\n    fetchCustomerData();\n  }, [customerId]);\n  const handleUpdate = async () => {\n    try {\n      // Make a PUT request to your API's update endpoint\n      const response = await fetch(`http://localhost:8000/updatecustomer/${customerId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          CustomerName: name,\n          CustomerEmail: email\n        })\n      });\n      console.log(response.data);\n      // Optionally, trigger the onUpdate callback or perform other actions\n    } catch (error) {\n      console.error('Error updating customer:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-6 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateCustomer, \"bHlsEoB66Iody2gDEiXqkA4VHqw=\");\n_c = UpdateCustomer;\nexport default UpdateCustomer;\nvar _c;\n$RefreshReg$(_c, \"UpdateCustomer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateCustomer","customerId","onUpdate","_s","name","setName","email","setEmail","fetchCustomerData","response","fetch","customerData","json","CustomerName","CustomerEmail","error","console","handleUpdate","method","headers","body","JSON","stringify","log","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cagne/Documents/AUF23/CSC 3700/Week13/final-hw/src/Components/UpdateCustomer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UpdateCustomer = ({ customerId, onUpdate }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    // Fetch existing customer data based on customerId when the component mounts\r\n    useEffect(() => {\r\n        const fetchCustomerData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:8000/customer/${customerId}`);\r\n                const customerData = await response.json();\r\n\r\n                // Populate the fields with existing data\r\n                setName(customerData.CustomerName);\r\n                setEmail(customerData.CustomerEmail);\r\n            } catch (error) {\r\n                console.error('Error fetching customer data:', error);\r\n            }\r\n        };\r\n\r\n        fetchCustomerData();\r\n    }, [customerId]);\r\n\r\n    const handleUpdate = async () => {\r\n        try {\r\n            // Make a PUT request to your API's update endpoint\r\n            const response = await fetch(`http://localhost:8000/updatecustomer/${customerId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    CustomerName: name,\r\n                    CustomerEmail: email,\r\n                }),\r\n            });\r\n\r\n            console.log(response.data);\r\n            // Optionally, trigger the onUpdate callback or perform other actions\r\n        } catch (error) {\r\n            console.error('Error updating customer:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container col-6 p-4\">\r\n            <h2>Update Customer</h2>\r\n            <form>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"name\" className=\"form-label\">\r\n                        Name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">\r\n                        Email:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleUpdate}>\r\n                    Update\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateCustomer;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}